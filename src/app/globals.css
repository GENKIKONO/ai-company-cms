/* ============================================================
   LuxuCare Global Styles - Modularized Design System
   Clean architecture with logical separation of concerns
   ============================================================ */

/* 1. Tailwind CSS Base */
@tailwind base;
@tailwind components;
@tailwind utilities;

/* 2. Core Design System Modules */
/* Theme and color system - Light theme enforcement with Apple HIG colors */
@import '../styles/modules/theme.css';

/* Typography system - Apple HIG typography scale and Japanese text optimization */
@import '../styles/modules/typography.css';

/* Layout system - Containers, sections, and grid systems */
@import '../styles/modules/layout.css';

/* Interactive components - Buttons, cards, and form elements */
@import '../styles/modules/components.css';

/* Animation system - Keyframes, transitions, and motion preferences */
@import '../styles/modules/animations.css';

/* Utility classes - Helper classes and responsive utilities */
@import '../styles/modules/utilities.css';

/* Page-specific components - Hero, pricing, FAQ, footer sections */
@import '../styles/modules/pages.css';

/* 3. Existing Design System Integration */
/* HIG Design System - Preserve existing design tokens */
@import '../styles/hig-design-tokens.css';

/* Existing Design System Components */
@import '../design-system/tokens/colors.css';
@import '../design-system/tokens/typography.css';
@import '../design-system/tokens/utilities.css';
@import '../design-system/patterns/sections.css';

/* ============================================================
   Global Overrides and Critical Fixes
   ============================================================ */

/* Performance Optimization - Core Web Vitals */
html, body {
  /* Performance optimization - BR-03 compliant */
  font-display: swap; /* FOIT prevention */
  contain: layout style paint; /* Containment API */
}

/* Critical Force Display Overrides - Ensure text visibility */
/* These overrides ensure critical UI text remains visible */

/* Force display GreenBandSection text */
.apple-green-band h2,
.apple-green-band p,
.apple-green-band span {
  color: white !important;
  opacity: 1 !important;
  visibility: visible !important;
  display: block !important;
}

/* Force display CTASection text */
.section--cta h1,
.section--cta h2,
.section--cta h3,
.section--cta p,
.section--cta span,
section[class*="bg-[var(--color-primary-dark)]"] h1,
section[class*="bg-[var(--color-primary-dark)]"] h2,
section[class*="bg-[var(--color-primary-dark)]"] h3,
section[class*="bg-[var(--color-primary-dark)]"] p,
section[class*="bg-[var(--color-primary-dark)]"] span {
  color: white !important;
  opacity: 1 !important;
  visibility: visible !important;
  display: block !important;
}

/* Force display feature cards text */
.hig-grid .hig-grid--3-cols > div span,
.hig-grid .hig-grid--3-cols > div h4,
.hig-grid .hig-grid--3-cols > div p,
div[class*="hig-grid"] div[class*="text-center"] span,
div[class*="hig-grid"] div[class*="text-center"] h4,
div[class*="hig-grid"] div[class*="text-center"] p {
  color: white !important;
  opacity: 1 !important;
  visibility: visible !important;
  display: block !important;
}

/* Force display all CTASection button text */
section[class*="bg-[var(--color-primary-dark)]"] button,
section[class*="bg-[var(--color-primary-dark)]"] .apple-button,
section[class*="bg-[var(--color-primary-dark)]"] .hig-cta-primary {
  color: white !important;
  opacity: 1 !important;
  visibility: visible !important;
}

/* Force display step numbers and text in application steps */
.hig-section .hig-grid h4,
.hig-section .hig-grid p,
.hig-section .hig-grid span,
section[class*="bg-[var(--color-primary-dark)]"] .hig-grid h4,
section[class*="bg-[var(--color-primary-dark)]"] .hig-grid p,
section[class*="bg-[var(--color-primary-dark)]"] .hig-grid span {
  color: white !important;
  opacity: 1 !important;
  visibility: visible !important;
  display: block !important;
}

section[class*="bg-[var(--color-primary-dark)]"] .hig-grid span {
  display: inline !important;
}

/* Force display main CTA message */
.main-cta-heading,
.main-cta-text,
.step-card-number,
.step-card-title,
.step-card-description {
  opacity: 1 !important;
  visibility: visible !important;
  color: inherit !important;
  font-size: inherit !important;
  line-height: inherit !important;
}

/* Force display step cards text content specifically */
.hig-section p.hig-text-body,
.hig-section h4.hig-text-h3,
.hig-section span {
  opacity: 1 !important;
  visibility: visible !important;
  color: white !important;
}

/* Mobile responsive adjustments */
@media (max-width: 768px) {
  /* Critical mobile optimizations preserved */
  .apple-hero-title {
    font-size: 14px;
  }
}

/* ============================================================
   Notes for Developers
   ============================================================ */

/*
This modular CSS architecture provides:

1. **Separation of Concerns**: Each module handles specific functionality
   - theme.css: Colors, light theme enforcement
   - typography.css: Font systems, text utilities  
   - layout.css: Containers, grids, spacing
   - components.css: Interactive elements
   - animations.css: Motion and transitions
   - utilities.css: Helper classes
   - pages.css: Page-specific components

2. **Maintainability**: Easy to locate and modify specific features

3. **Performance**: Only load what's needed, better caching

4. **Scalability**: Add new modules as needed

5. **Team Collaboration**: Developers can work on different modules simultaneously

To add new styles:
- Add to appropriate module based on functionality
- Create new module if it doesn't fit existing categories
- Import new modules in this file

To modify existing styles:
- Locate the appropriate module
- Make changes in the specific module file
- Avoid adding styles to this global file unless absolutely necessary

*/

