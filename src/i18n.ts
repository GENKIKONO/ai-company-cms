import { getRequestConfig } from 'next-intl/server';
import { notFound } from 'next/navigation';

// Can be imported from a shared config
export const locales = ['en', 'ja', 'zh', 'ko', 'es', 'fr', 'de'] as const;
export type Locale = typeof locales[number];

export const defaultLocale: Locale = 'ja';

export const localeNames: Record<Locale, string> = {
  en: 'English',
  ja: 'æ—¥æœ¬èªž',
  zh: 'ä¸­æ–‡',
  ko: 'í•œêµ­ì–´',
  es: 'EspaÃ±ol',
  fr: 'FranÃ§ais',
  de: 'Deutsch',
};

export const localeFlags: Record<Locale, string> = {
  en: 'ðŸ‡ºðŸ‡¸',
  ja: 'ðŸ‡¯ðŸ‡µ',
  zh: 'ðŸ‡¨ðŸ‡³',
  ko: 'ðŸ‡°ðŸ‡·',
  es: 'ðŸ‡ªðŸ‡¸',
  fr: 'ðŸ‡«ðŸ‡·',
  de: 'ðŸ‡©ðŸ‡ª',
};

export default getRequestConfig(async ({ locale }) => {
  // Validate that the incoming `locale` parameter is valid
  if (!locales.includes(locale as Locale)) notFound();

  return {
    messages: (await import(`../messages/${locale}.json`)).default
  };
});